name: Release

on:
  push:
    branches: [ main ]   # release-please opens PRs into main; merge to cut a release
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

env:
  CARGO_TERM_COLOR: always

jobs:
  release_please:
    name: release-please (Rust workspace)
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
    steps:
      - uses: google-github-actions/release-please-action@v4
        id: release
        with:
          release-type: rust
          package-name: ferriclink
          monorepo-tags: true
          bump-minor-pre-major: true
          changelog-types: |
            [
              {"type":"feat","section":"Features","hidden":false},
              {"type":"fix","section":"Bug Fixes","hidden":false},
              {"type":"perf","section":"Performance","hidden":false},
              {"type":"refactor","section":"Refactors","hidden":false},
              {"type":"docs","section":"Docs","hidden":false},
              {"type":"chore","section":"Chores","hidden":false}
            ]

  publish:
    name: publish to crates.io
    needs: release_please
    if: needs.release_please.outputs.release_created == 'true'
    runs-on: ubuntu-latest
    environment: crates-io
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2

      - name: Set up cargo token
        run: |
          mkdir -p $HOME/.cargo
          cat > $HOME/.cargo/credentials <<EOF
          [registry]
          token = "${{ secrets.CARGO_REGISTRY_TOKEN }}"
          EOF
          chmod 0600 $HOME/.cargo/credentials

      # when we add more crates later, publish in topological order.
      - name: Dry-run publish
        run: |
          cargo publish -p ferriclink-core --dry-run --allow-dirty

      - name: Publish
        run: |
          cargo publish -p ferriclink-core --no-verify

  announce:
    name: tag + changelog summary
    needs: [release_please, publish]
    if: needs.release_please.outputs.release_created == 'true'
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "Published ${{ needs.release_please.outputs.tag_name }} to crates.io ðŸŽ‰"
